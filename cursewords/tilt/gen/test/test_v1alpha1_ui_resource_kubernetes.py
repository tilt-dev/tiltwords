# coding: utf-8

"""
    tilt

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.20.2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tilt_dev.python-kubernetes.client
from tilt-dev/python-kubernetes.client.models.v1alpha1_ui_resource_kubernetes import V1alpha1UIResourceKubernetes  # noqa: E501
from tilt-dev/python-kubernetes.client.rest import ApiException

class TestV1alpha1UIResourceKubernetes(unittest.TestCase):
    """V1alpha1UIResourceKubernetes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1alpha1UIResourceKubernetes
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tilt-dev/python-kubernetes.client.models.v1alpha1_ui_resource_kubernetes.V1alpha1UIResourceKubernetes()  # noqa: E501
        if include_optional :
            return V1alpha1UIResourceKubernetes(
                all_containers_ready = True,
                display_names = [
                    '0'
                    ],
                pod_creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                pod_name = '0',
                pod_restarts = 56,
                pod_status = '0',
                pod_status_message = '0',
                pod_update_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                span_id = '0'
            )
        else :
            return V1alpha1UIResourceKubernetes(
        )

    def testV1alpha1UIResourceKubernetes(self):
        """Test V1alpha1UIResourceKubernetes"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
