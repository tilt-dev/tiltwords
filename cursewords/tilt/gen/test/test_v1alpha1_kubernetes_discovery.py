# coding: utf-8

"""
    tilt

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.20.2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tilt_dev.python-kubernetes.client
from tilt-dev/python-kubernetes.client.models.v1alpha1_kubernetes_discovery import V1alpha1KubernetesDiscovery  # noqa: E501
from tilt-dev/python-kubernetes.client.rest import ApiException

class TestV1alpha1KubernetesDiscovery(unittest.TestCase):
    """V1alpha1KubernetesDiscovery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1alpha1KubernetesDiscovery
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tilt-dev/python-kubernetes.client.models.v1alpha1_kubernetes_discovery.V1alpha1KubernetesDiscovery()  # noqa: E501
        if include_optional :
            return V1alpha1KubernetesDiscovery(
                api_version = '0',
                kind = '0',
                metadata = tilt-dev/python-kubernetes.client.models.v1/object_meta.v1.ObjectMeta(
                    annotations = {
                        'key' : '0'
                        },
                    cluster_name = '0',
                    creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                    deletion_grace_period_seconds = 56,
                    deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                    finalizers = [
                        '0'
                        ],
                    generate_name = '0',
                    generation = 56,
                    labels = {
                        'key' : '0'
                        },
                    managed_fields = [
                        tilt-dev/python-kubernetes.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                            api_version = '0',
                            fields_type = '0',
                            fields_v1 = tilt-dev/python-kubernetes.client.models.fields_v1.fieldsV1(),
                            manager = '0',
                            operation = '0',
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ],
                    name = '0',
                    namespace = '0',
                    owner_references = [
                        tilt-dev/python-kubernetes.client.models.v1/owner_reference.v1.OwnerReference(
                            api_version = '0',
                            block_owner_deletion = True,
                            controller = True,
                            kind = '0',
                            name = '0',
                            uid = '0', )
                        ],
                    resource_version = '0',
                    self_link = '0',
                    uid = '0', ),
                spec = tilt-dev/python-kubernetes.client.models.v1alpha1/kubernetes_discovery_spec.v1alpha1.KubernetesDiscoverySpec(
                    extra_selectors = [
                        tilt-dev/python-kubernetes.client.models.v1/label_selector.v1.LabelSelector(
                            match_expressions = [
                                tilt-dev/python-kubernetes.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                                    key = '0',
                                    operator = '0',
                                    values = [
                                        '0'
                                        ], )
                                ],
                            match_labels = {
                                'key' : '0'
                                }, )
                        ],
                    watches = [
                        tilt-dev/python-kubernetes.client.models.v1alpha1/kubernetes_watch_ref.v1alpha1.KubernetesWatchRef(
                            name = '0',
                            namespace = '0',
                            uid = '0', )
                        ], ),
                status = tilt-dev/python-kubernetes.client.models.v1alpha1/kubernetes_discovery_status.v1alpha1.KubernetesDiscoveryStatus(
                    monitor_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                    pods = [
                        tilt-dev/python-kubernetes.client.models.v1alpha1/pod.v1alpha1.Pod(
                            ancestor_uid = '0',
                            baseline_restart_count = 56,
                            conditions = [
                                tilt-dev/python-kubernetes.client.models.v1alpha1/pod_condition.v1alpha1.PodCondition(
                                    last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                                    message = '0',
                                    reason = '0',
                                    status = '0',
                                    type = '0', )
                                ],
                            containers = [
                                tilt-dev/python-kubernetes.client.models.v1alpha1/container.v1alpha1.Container(
                                    id = '0',
                                    image = '0',
                                    name = '0',
                                    ports = [
                                        56
                                        ],
                                    ready = True,
                                    restarts = 56,
                                    state = tilt-dev/python-kubernetes.client.models.v1alpha1/container_state.v1alpha1.ContainerState(
                                        running = tilt-dev/python-kubernetes.client.models.v1alpha1/container_state_running.v1alpha1.ContainerStateRunning(
                                            started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                                        terminated = tilt-dev/python-kubernetes.client.models.v1alpha1/container_state_terminated.v1alpha1.ContainerStateTerminated(
                                            exit_code = 56,
                                            finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                                            reason = '0',
                                            started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                                        waiting = tilt-dev/python-kubernetes.client.models.v1alpha1/container_state_waiting.v1alpha1.ContainerStateWaiting(
                                            reason = '0', ), ), )
                                ],
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                            deleting = True,
                            errors = [
                                '0'
                                ],
                            init_containers = [
                                tilt-dev/python-kubernetes.client.models.v1alpha1/container.v1alpha1.Container(
                                    id = '0',
                                    image = '0',
                                    name = '0',
                                    ports = [
                                        56
                                        ],
                                    ready = True,
                                    restarts = 56,
                                    state = tilt-dev/python-kubernetes.client.models.v1alpha1/container_state.v1alpha1.ContainerState(
                                        running = tilt-dev/python-kubernetes.client.models.v1alpha1/container_state_running.v1alpha1.ContainerStateRunning(
                                            started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                                        terminated = tilt-dev/python-kubernetes.client.models.v1alpha1/container_state_terminated.v1alpha1.ContainerStateTerminated(
                                            exit_code = 56,
                                            finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                                            reason = '0',
                                            started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                                        waiting = tilt-dev/python-kubernetes.client.models.v1alpha1/container_state_waiting.v1alpha1.ContainerStateWaiting(
                                            reason = '0', ), ), )
                                ],
                            name = '0',
                            namespace = '0',
                            phase = '0',
                            pod_template_spec_hash = '0',
                            status = '0',
                            uid = '0',
                            update_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], )
            )
        else :
            return V1alpha1KubernetesDiscovery(
        )

    def testV1alpha1KubernetesDiscovery(self):
        """Test V1alpha1KubernetesDiscovery"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
